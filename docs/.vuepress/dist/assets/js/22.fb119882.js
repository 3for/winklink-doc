(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{381:function(t,a,s){"use strict";s.r(a);var e=s(24),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"winklink-随机数服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#winklink-随机数服务"}},[t._v("#")]),t._v(" WINkLink 随机数服务")]),t._v(" "),s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("VRF（Verifiable Random Function)，即可验证的随机函数，其可生成安全可靠的随机数。\n随机数由用户提供的seed、nonce(VRFCoordinator合约的私有状态)、请求所在区块hash 和 随机数生成节点的私钥共同决定，随机数节点不可作弊。且该随机数在返回给用户Dapp之前经过了验证，从而保证了该随机数的安全性。")]),t._v(" "),s("p",[t._v("随机数生成流程如下：")]),t._v(" "),s("ul",[s("li",[t._v("由用户合约在链上发出生成随机数的请求；")]),t._v(" "),s("li",[t._v("节点监听到该请求后，会在链下生成随机数和证明，然后在链上合约中响应；")]),t._v(" "),s("li",[t._v("链上合约对生成的随机数进行验证并通过后，以回调函数反馈到用户Dapp。")])]),t._v(" "),s("p",[t._v("它可以用于任何需要可靠随机数的应用程序：")]),t._v(" "),s("ul",[s("li",[t._v("区块链游戏和NFTs")]),t._v(" "),s("li",[t._v("职责和资源的随机分配（例如随机分配法官审理案件）")]),t._v(" "),s("li",[t._v("为共识机制选择代表性样本")])]),t._v(" "),s("p",[t._v("本文介绍如何部署和使用VRF合约。")]),t._v(" "),s("h2",{attrs:{id:"准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),s("p",[t._v("WINkLink 的维护者需要对 TRON 有一定的了解，熟悉智能合约部署和调用流程。\n建议参考 "),s("a",{attrs:{href:"https://cn.developers.tron.network/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v(" 。")]),t._v(" "),s("p",[t._v("完成节点账号申请,建议参考"),s("a",{attrs:{href:"https://doc.winklink.org/v1/doc/deploy.html#%E5%87%86%E5%A4%87%E8%8A%82%E7%82%B9%E5%B8%90%E5%8F%B7",target:"_blank",rel:"noopener noreferrer"}},[t._v("节点账号准备文档"),s("OutboundLink")],1),t._v(" 。")]),t._v(" "),s("h2",{attrs:{id:"vrfcoordinator-合约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vrfcoordinator-合约"}},[t._v("#")]),t._v(" VRFCoordinator 合约")]),t._v(" "),s("p",[t._v("VRFCoordinator 合约是部署在 TRON 公链上的预言机合约。主要功能如下")]),t._v(" "),s("ul",[s("li",[t._v("接收消费者合约(Consumer Contract)的数据请求，触发 Event Log\n"),s("ul",[s("li",[t._v("数据请求发送时会附带 WIN 转账作为使用费用")])])]),t._v(" "),s("li",[t._v("接受 WINkLink 节点所提交的随机数和证明\n"),s("ul",[s("li",[t._v("VRFCoordinator收到合约后会对随机数进行验证")])])]),t._v(" "),s("li",[t._v("对数据请求的 WIN 代币费用进行结算，提取收益")])]),t._v(" "),s("p",[t._v("合约代码位于 "),s("a",{attrs:{href:"https://github.com/wink-link/winklink/blob/feature/rename2wink/tvm-contracts/v1.0/VRF/VRFCoordinator.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("VRFCoordinator.sol"),s("OutboundLink")],1),t._v(" 。")]),t._v(" "),s("p",[t._v("部署 VRFCoordinator 合约时需要在构造函数提供相关参数：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address _win"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address _winkMid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address _blockHashStore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("_blockHashStore")]),t._v(" 为BlockHashStore合约地址，"),s("code",[t._v("_win")]),t._v(" 为WIN代币地址, "),s("code",[t._v("_winkMid")]),t._v(" 为WinkMid合约地址。")]),t._v(" "),s("p",[t._v("为方便开发者, Nile 测试网已经部署了 "),s("code",[t._v("WinkMid")]),t._v(" 合约，封装了 Nile 测试网 "),s("code",[t._v("WIN")]),t._v(" 代币。\n开发者可直接使用该合约地址，无需额外部署。 Nile 测试网同时提供了水龙头地址可以领取测试 TRX 和 WIN 代币。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Nile 测试网")]),t._v(" "),s("ul",[s("li",[t._v("WIN 代币合约地址: "),s("code",[t._v("TNDSHKGBmgRx9mDYA9CnxPx55nu672yQw2")])]),t._v(" "),s("li",[t._v("WinkMid 合约地址: "),s("code",[t._v("TFbci8j8Ja3hMLPsupsuYcUMsgXniG1TWb")])]),t._v(" "),s("li",[t._v("测试网水龙头: "),s("a",{attrs:{href:"https://nileex.io/join/getJoinPage",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://nileex.io/join/getJoinPage"),s("OutboundLink")],1)])])]),t._v(" "),s("h2",{attrs:{id:"tron主网winklink-vrf信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tron主网winklink-vrf信息"}},[t._v("#")]),t._v(" Tron主网WINkLink VRF信息")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("Item")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("Value")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("LINK Token")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("TLa2f6VPqDgRE67v1736s7bJ8Ray5wYjU7")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("WinkMid")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("TKy2MGKR6rQKBwM7dneUEnh2kvsodRR1Jo")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("VRFCoordinator")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("TTMLZ9e14KVCXkQrCSGRBS4r5iQPXGP1bA")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Key Hash 1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("0x284367a1c6c6cfee60d3343b399e8353da9a1482bdfddb549d217787a4c558f2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Key Hash 2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("0x489db76c028fb5020e0c3d4fd7126f9c2750c7f52f3e03941c5bfcbe1c27d2a5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("Key Hash 3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("0xe90fbf3bd9cce99d28f7110a4afaa965f03061a6d6dd5a6f6dd6b0f937d73a63")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("fee")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4 WIN")])])])]),t._v(" "),s("h2",{attrs:{id:"节点部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#节点部署"}},[t._v("#")]),t._v(" 节点部署")]),t._v(" "),s("p",[t._v("节点部署部分可以参考"),s("a",{attrs:{href:"https://doc.winklink.org/v1/doc/deploy.html#%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2",target:"_blank",rel:"noopener noreferrer"}},[t._v("WINkLink"),s("OutboundLink")],1),t._v(" ，本部分仅列出VRF节点部署的不同之处。")]),t._v(" "),s("p",[t._v("VRFCoordinator 合约部署完毕后，就可以开始 WINkLink 节点部署。")]),t._v(" "),s("p",[t._v("WINkLink 节点代码位于: "),s("a",{attrs:{href:"https://github.com/wink-link/winklink/tree/feature/rename2wink/node",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/wink-link/winklink/tree/feature/rename2wink/node"),s("OutboundLink")],1),t._v("，\n编译完成后 node-v1.0.jar 位于项目源码目录下的 node/build/libs/ 中")]),t._v(" "),s("p",[t._v("###节点配置")]),t._v(" "),s("p",[t._v("节点配置文件确认完毕后，还需要创建 "),s("code",[t._v("vrfKeyStore.yml")]),t._v(" 文件, 写入用于生成VRF的私钥(支持添加多个VRF私钥):")]),t._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("privateKeys:\n  - *****(32字节 hex 编码私钥)\n")])])]),s("p",[t._v("支持在无需重启节点server的情况下，动态更新vrfKeyStore，步骤如下：\n首先在"),s("code",[t._v("vrfKeyStore.yml")]),t._v(" 文件中添加新的VRF私钥\n然后执行如下指令：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" --location --request GET "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/vrf/updateVRFKey/vrfKeyStore.yml'")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("通过文件而非命令行参数提供私密信息是重要的安全性考虑，在生产环境需要设定私密文件 "),s("code",[t._v("vrfKeyStore.yml")]),t._v(" 权限为 600,\n即只有拥有者可读写。")])]),t._v(" "),s("h3",{attrs:{id:"启动节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动节点"}},[t._v("#")]),t._v(" 启动节点")]),t._v(" "),s("p",[t._v("所有配置文件都需要被复制到节点程序当前运行时目录，即 "),s("code",[t._v("cp node/src/main/resource/*.yml ./")]),t._v("，同时application-dev文件中的 "),s("code",[t._v("tronApiKey")]),t._v(" 部分需要填充apikey.")]),t._v(" "),s("p",[t._v("使用如下命令启动 WINkLink 节点程序：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("java -jar node/build/libs/node-v1.0.jar -k key.store -vrfK vrfKeyStore.yml\n")])])]),s("p",[t._v("具体的配置项目也可以通过命令行指定，例如：")]),t._v(" "),s("p",[t._v("主网:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("java -jar node/build/libs/node-v1.0.jar --server.port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(" --spring.profiles.active"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dev --key key.store  --vrfKey vrfKeyStore.yml\n")])])]),s("p",[t._v("nile测试网:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("java -jar node/build/libs/node-v1.0.jar --env dev --server.port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v(" --spring.profiles.active"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dev --key key.store  --vrfKey vrfKeyStore.yml\n")])])]),s("p",[t._v("使用如下命令判断 WINkLink 节点是否正常运行：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v(" -f logs/tron.log\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("节点帐号必须有足够的 TRX 代币，用于合约调用。可以通过测试网水龙头地址申请。")])]),t._v(" "),s("h3",{attrs:{id:"为节点添加-job"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为节点添加-job"}},[t._v("#")]),t._v(" 为节点添加 job")]),t._v(" "),s("p",[t._v("节点的 job 代表了节点所支持的数据服务, job ID 通过一个 32 字节唯一标识。")]),t._v(" "),s("p",[t._v("WINkLink 节点正常运行后，就可以通过 HTTP API 为节点添加 job:")]),t._v(" "),s("p",[t._v("示例：(修改下面代码中 "),s("code",[t._v("address")]),t._v(" 参数为上述步骤中部署的 VRFCoordinator 合约地址；"),s("code",[t._v("publicKey")]),t._v(" 参数为节点公钥的压缩值，该值可通过查看节点运行后的终端显示获得,对应项为"),s("code",[t._v("ecKey compressed")]),t._v(")")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" --location --request POST "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/job/specs'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --header "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --data-raw "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n    "initiators": [\n        {\n        "type": "randomnesslog",\n        "params": {\n            "address": "TYmwSFuFuiDZCtYsRFKCNr25byeqHH7Esb"\n        }\n        }\n    ],\n    "tasks": [\n        {\n        "type": "random",\n        "params": {\n        "publicKey":"0x024e6bda4373bea59ec613b8721bcbb56222ab2ec10b18ba24ae369b7b74ab1452"\n        }\n        },\n        {\n        "type": "trontx",\n        "params": {\n            "type": "TronVRF"\n        }\n\t}\n    ]\n    }\'')]),t._v("\n")])])]),s("h3",{attrs:{id:"查询节点-job"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查询节点-job"}},[t._v("#")]),t._v(" 查询节点 job")]),t._v(" "),s("p",[t._v("请求示例：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" --location --request GET "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/job/specs'")]),t._v("\n")])])]),s("h2",{attrs:{id:"为节点账户授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为节点账户授权"}},[t._v("#")]),t._v(" 为节点账户授权")]),t._v(" "),s("p",[t._v("节点账户需要授权才能向 VRFCoordinator 合约提交数据，否则会报错 。")]),t._v(" "),s("p",[t._v("需要使用 VRFCoordinator 合约的 owner 执行如下合约调用，将节点账户添加到白名单:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerProvingKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("uint256 _fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address _oracle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes calldata _publicProvingKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 _jobID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("其中 "),s("code",[t._v("_fee")]),t._v(" 为注册节点生成随机数最小的WIN代币费用，"),s("code",[t._v("_oracle")]),t._v(" 为注册节点的地址,用于接收Dapp应用对其支付的WIN代币，\n"),s("code",[t._v("_publicProvingKey")]),t._v(" 为注册节点用于生成随机数的公钥，即x||y， "),s("code",[t._v("_jobID")]),t._v(" 为节点VRF服务的JobID。")]),t._v(" "),s("p",[t._v("示例调用例如 "),s("code",[t._v("registerProvingKey（10,TYmwSFuFuiDZCtYsRFKCNr25byeqHH7Esb, 0x4e6bda4373bea59ec613b8721bcbb56222ab2ec10b18ba24ae369b7b74ab145224d509bc2778e6d1c8a093522ba7f9b6669a9aef57d2231f856e4b594ad5f4ac, 04d773890bc347f88544dc85bea24985）")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"dapp合约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dapp合约"}},[t._v("#")]),t._v(" Dapp合约")]),t._v(" "),s("p",[t._v("示例Dapp合约： "),s("a",{attrs:{href:"https://github.com/wink-link/winklink/blob/feature/rename2wink/tvm-contracts/v1.0/VRF/VRFD20.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("VRFD20.sol"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("该示例为权力游戏合约，WINkLink VRF请求随机数，将随机值转换为1~20，每个数字代表一个房间，如经转换后的数字为1，则被分配到Targaryan房间，2对应Lannister房间，以此类推。")]),t._v(" "),s("p",[t._v("当编写新的Dapp合约时，需遵循以下规则：")]),t._v(" "),s("ul",[s("li",[t._v("a) 引入 VRFConsumerBase:")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  pragma solidity "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.6")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./VRFConsumerBase.sol"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  contract "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VRFD20")]),t._v(" is VRFConsumerBase "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("b) 设置 "),s("code",[t._v("s_keyHash")]),t._v(" 为生成随机数所使用的VRF key；"),s("code",[t._v("s_fee")]),t._v(" 为单次随机数请求所支付的费用。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  bytes32 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" s_keyHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  uint256 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" s_fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("c) Dapp合约初始化：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address vrfCoordinator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address win"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address winkMid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 keyHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint256 fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("VRFConsumerBase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vrfCoordinator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" win"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" winkMid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    s_keyHash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keyHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    s_fee "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("d) 调用 "),s("code",[t._v("requestRandomness")]),t._v(" 来发起随机数请求，记录相应的"),s("code",[t._v("requestId")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollDice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("uint256 userProvidedSeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address roller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("winkMid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("balanceOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" s_fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not enough WIN to pay fee"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    requestId "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestRandomness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s_keyHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s_fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userProvidedSeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    emit "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DiceRolled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" roller"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("e) 实现 "),s("code",[t._v("fulfillRandomness")]),t._v(" 来接收 VRFCoordinator合约回调的经验证通过的随机数"),s("code",[t._v("requestId")]),t._v("和"),s("code",[t._v("randomness")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fulfillRandomness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("bytes32 requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint256 randomness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" internal override "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint256 d20Value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" randomness"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    s_results"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s_rollers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d20Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    emit "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("DiceLanded")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requestId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d20Value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"部署dapp合约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署dapp合约"}},[t._v("#")]),t._v(" 部署Dapp合约")]),t._v(" "),s("p",[t._v("部署 VRFD20 合约时需要向构造函数中填充参数")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address vrfCoordinator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address win"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address winkMid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes32 keyHash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uint256 fee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("其中 "),s("code",[t._v("vrfCoordinator")]),t._v(" 为 VRFCoordinator 合约地址，"),s("code",[t._v("win")]),t._v(" 为 WIN 代币合约地址，"),s("code",[t._v("winkMid")]),t._v(" 为 WinkMid 合约地址，\n"),s("code",[t._v("keyHash")]),t._v(" 为注册节点公钥的Hash值，可通过调用 VRFCoordinator 合约的 hashOfKeyBytes 函数获得(输入为x||y)。\n"),s("code",[t._v("fee")]),t._v(" 支付随机数生成的WIN代币费用，可修改，其值应大于随机数节点注册时要求的fee。")]),t._v(" "),s("p",[t._v("例如 "),s("code",[t._v("constructor（TUeVYd9ZYeKh87aDA9Tp7F5Ljc47JKC37x,TNDSHKGBmgRx9mDYA9CnxPx55nu672yQw2, TFbci8j8Ja3hMLPsupsuYcUMsgXniG1TWb,0xe4f280f6d621db4bccd8568197e3c84e3f402c963264369a098bb2f0922cb125,12）")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"为合约转入win代币"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为合约转入win代币"}},[t._v("#")]),t._v(" 为合约转入WIN代币")]),t._v(" "),s("p",[t._v("VRFD20 合约需要调用 VRFCoordinator 合约，所以合约账户需要有足够的 WIN 代币。可以通过转账或测试网水龙头为合约转入若干 WIN 代币。")]),t._v(" "),s("h3",{attrs:{id:"调用dapp合约"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用dapp合约"}},[t._v("#")]),t._v(" 调用Dapp合约")]),t._v(" "),s("p",[t._v("使用如下接口请求生成随机数：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollDice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("uint256 userProvidedSeed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" address roller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("其中 "),s("code",[t._v("userProvidedSeed")]),t._v(" 为用户提供的种子，"),s("code",[t._v("roller")]),t._v(" 为使用随机数的地址")]),t._v(" "),s("p",[t._v("调用示例 "),s("code",[t._v("rollDice(0x852f725894485e4979af5ea47ddd90cc68ea1ac0f4b99e52e9b91fa35a7204e2, TL44GNkjETr2JumQHgYJF842oyE6h2inoR)")]),t._v("。")])])}),[],!1,null,null,null);a.default=n.exports}}]);